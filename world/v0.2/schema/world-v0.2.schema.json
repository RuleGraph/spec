{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://rulegraph.org/schema/world/v0.2/world-v0.2.schema.json",
  "title": "RuleGraph World v0.2",
  "type": "object",
  "required": ["id", "type", "version", "frames", "entities", "dynamics"],
  "properties": {
    "id": { "type": "string", "minLength": 1 },
    "type": { "type": "string", "const": "rg:World" },
    "version": { "type": "string", "minLength": 1 },

    "profile": { "type": "string", "description": "Optional world profile IRI (e.g., rg:profile/planetary.v1)" },

    "frames": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/Frame" }
    },

    "entities": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/Body" }
    },

    "dynamics": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/Dynamic" }
    },

    "config": {
      "type": "object",
      "description": "Optional run configuration",
      "properties": {
        "dtSeconds": { "type": "number", "exclusiveMinimum": 0 },
        "steps": { "type": "integer", "minimum": 1 },
        "startTime": { "type": "string", "format": "date-time" }
      },
      "additionalProperties": false
    },

    "provenance": {
      "type": "object",
      "description": "Optional W3C PROV-like metadata",
      "additionalProperties": true
    },

    "ext": {
      "type": "object",
      "description": "Namespaced extensions (domain-specific blocks). Keys should be namespaces, values free-form.",
      "additionalProperties": true
    }
  },

  "patternProperties": {
    "^x-": { "description": "Vendor/experimental fields", "type": ["object","array","string","number","boolean","null"] }
  },

  "additionalProperties": false,

  "$defs": {
    "Frame": {
      "type": "object",
      "required": ["id", "type", "metric", "units"],
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "type": { "type": "string", "const": "rg:InertialFrame" },
        "metric": { "type": "string", "enum": ["Euclidean"], "description": "Metric name (v0.2: Euclidean only)" },
        "units": {
          "type": "object",
          "required": ["length", "time", "mass"],
          "properties": {
            "length": { "type": "string", "minLength": 1 },
            "time":   { "type": "string", "minLength": 1 },
            "mass":   { "type": "string", "minLength": 1 }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "patternProperties": { "^x-": {} }
    },

    "Quantity": {
      "type": "object",
      "required": ["value", "unit"],
      "properties": {
        "value": { "type": ["number","integer"] },
        "unit": { "type": "string", "minLength": 1 },
        "sigma": { "type": "number", "description": "Optional uncertainty (1-sigma)" }
      },
      "additionalProperties": false
    },

    "Vec3Quantity": {
      "type": "object",
      "required": ["value", "unit"],
      "properties": {
        "value": {
          "type": "array",
          "items": { "type": "number" },
          "minItems": 3,
          "maxItems": 3
        },
        "unit": { "type": "string", "minLength": 1 },
        "sigma": { "type": "number" }
      },
      "additionalProperties": false
    },

    "State": {
      "type": "object",
      "required": ["frame", "t", "position", "velocity"],
      "properties": {
        "frame": { "type": "string", "minLength": 1 },
        "t": { "type": "string", "format": "date-time" },
        "position": { "$ref": "#/$defs/Vec3Quantity" },
        "velocity": { "$ref": "#/$defs/Vec3Quantity" }
      },
      "additionalProperties": false,
      "patternProperties": { "^x-": {} }
    },

    "Body": {
      "type": "object",
      "required": ["id", "type", "mass", "state"],
      "properties": {
        "id": { "type": "string", "minLength": 1 },
        "type": { "type": "string", "const": "rg:Body" },
        "mass": { "$ref": "#/$defs/Quantity" },
        "state": { "$ref": "#/$defs/State" }
      },
      "additionalProperties": false,
      "patternProperties": { "^x-": {} }
    },

    "SelectorPairs": {
      "type": "object",
      "required": ["pairs"],
      "properties": {
        "pairs": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": { "type": "string", "minLength": 1 }
          }
        }
      },
      "additionalProperties": false
    },

    "SelectorBodies": {
      "type": "object",
      "required": ["bodies"],
      "properties": {
        "bodies": {
          "type": "array",
          "minItems": 1,
          "items": { "type": "string", "minLength": 1 }
        }
      },
      "additionalProperties": false
    },

    "Dynamic": {
      "type": "object",
      "required": ["ref"],
      "properties": {
        "ref": {
          "type": "string",
          "minLength": 1,
          "description": "LawCard IRI (must resolve to a LawCard with verified sha256)",
          "pattern": "^rg:law/[A-Za-z0-9._-]+\\.v\\d+(?:\\.\\d+)?$"
        },

        "selector": {
          "description": "Scope of application for this law",
          "oneOf": [
            { "$ref": "#/$defs/SelectorPairs" },
            { "$ref": "#/$defs/SelectorBodies" },
            { "type": "string", "enum": ["all"] }
          ]
        },

        "override": {
          "type": "object",
          "description": "Parameter overrides by symbol name (value/unit optional for advanced engines)",
          "additionalProperties": {
            "oneOf": [
              { "type": "number" },
              { "type": "string" },
              {
                "type": "object",
                "properties": {
                  "value": { "type": ["number","integer"] },
                  "unit": { "type": "string" }
                },
                "required": ["value"],
                "additionalProperties": false
              }
            ]
          }
        },

        "phase": {
          "type": "integer",
          "minimum": 0,
          "description": "Evaluation order hint (lower runs earlier). Default 0."
        },

        "combines": {
          "type": "string",
          "enum": ["additive", "exclusive", "nonlinear"],
          "description": "Combination semantics with other dynamics targeting the same scope"
        }
      },
      "additionalProperties": false,
      "patternProperties": { "^x-": {} }
    }
  }
}
